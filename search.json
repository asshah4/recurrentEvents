[{"path":"https://shah-in-boots.github.io/card/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anish S. Shah. Author, maintainer, copyright holder.","code":""},{"path":"https://shah-in-boots.github.io/card/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shah (2025). card: Cardiovascular Applications Research Data. R package version 0.1.1, https://cran.r-project.org/package=card.","code":"@Manual{,   title = {card: Cardiovascular Applications in Research Data},   author = {Anish S. Shah},   year = {2025},   note = {R package version 0.1.1},   url = {https://cran.r-project.org/package=card}, }"},{"path":[]},{"path":"https://shah-in-boots.github.io/card/readme.html","id":"cardiovascular-applications-for-research-data","dir":"","previous_headings":"","what":"Cardiovascular Applications for Research Data","title":"card","text":"inspiration card create useful functions analytical approaches computational neurocardiology, electrocardiography epidemiology. areas focus package following: handling recurrent circadian events epidemiological focus effective model building","code":""},{"path":"https://shah-in-boots.github.io/card/readme.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"card","text":"can install released version card CRAN : development version GitHub :","code":"install.packages(\"card\") # install.packages(\"devtools\") devtools::install_github(\"shah-in-boots/card\")"},{"path":"https://shah-in-boots.github.io/card/readme.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"card","text":"intent card assist analysis cardiovascular epidemiological data, focus cardiac-specific datasets data types.","code":"library(card)"},{"path":"https://shah-in-boots.github.io/card/readme.html","id":"datasets","dir":"","previous_headings":"Usage","what":"Datasets","title":"card","text":"Cardiovascular disease outcomes recurrent events Vectorcardiography data high-risk cohort Continuous electrocardiography recordings clinical cohort quantitative stress data","code":"# ECG data data(\"twins\") head(twins) #> # A tibble: 6 × 23 #> # Groups:   patid, hour [6] #>   patid   age   bmi race  smoking hptn  dm    chf   prevchd med_beta_blockers #>   <dbl> <dbl> <dbl> <fct> <fct>   <fct> <fct> <fct> <fct>   <fct>             #> 1     1    49  27.4 0     1       1     0     0     0       0                 #> 2     1    49  27.4 0     1       1     0     0     0       0                 #> 3     1    49  27.4 0     1       1     0     0     0       0                 #> 4     1    49  27.4 0     1       1     0     0     0       0                 #> 5     1    49  27.4 0     1       1     0     0     0       0                 #> 6     1    49  27.4 0     1       1     0     0     0       0                 #> # ℹ 13 more variables: med_antidepr <fct>, beck_total <dbl>, sad_bin <fct>, #> #   sad_cat <fct>, PETdiff_2 <fct>, dyxtime <dttm>, date <date>, hour <dbl>, #> #   rDYX <dbl>, sDYX <dbl>, HR <dbl>, CP <dbl>, zip <chr>  # Outcomes data data(\"stress\") head(stress) #> # A tibble: 6 × 11 #>      id start      stop       head_ache_date_1 head_ache_date_2 head_ache_date_3 #>   <dbl> <date>     <date>     <date>           <date>           <date>           #> 1   123 2014-08-26 2016-12-08 2016-12-08       NA               NA               #> 2   117 2014-08-12 2016-10-30 2016-10-30       NA               NA               #> 3   145 2014-10-22 2016-07-31 2016-06-01       2016-07-31       NA               #> 4   144 2014-10-21 2017-03-24 2015-02-12       NA               NA               #> 5   204 2015-03-16 2015-04-03 NA               NA               NA               #> 6   283 2015-10-12 2016-01-19 NA               NA               NA               #> # ℹ 5 more variables: heart_ache_date_1 <date>, heart_ache_date_2 <date>, #> #   heart_ache_date_3 <date>, death <dbl>, broken_heart <dbl>  # VCG data data(\"geh\") head(geh) #> # A tibble: 6 × 70 #>      pid hhp_id   age sex   age_cat systolic_bp_first systolic_bp_second #>    <dbl>  <dbl> <dbl> <fct> <fct>               <dbl>              <dbl> #> 1 200481 220946    42 0     0                     162                165 #> 2 200489 224643    62 1     1                     133                128 #> 3 200495 224845    84 0     2                     100                 99 #> 4 200052 222917    65 0     2                     139                141 #> 5 200517 220638    64 1     1                     166                163 #> 6 200623 224862    57 0     1                     151                144 #> # ℹ 63 more variables: systolic_bp_third <dbl>, diastolic_bp_first <dbl>, #> #   diastolic_bp_second <dbl>, diastolic_bp_third <dbl>, #> #   pulse_rate_first <dbl>, pulse_rate_second <dbl>, height_cm <dbl>, #> #   weight_kg <dbl>, waist_cm <dbl>, dia_trt_allopdrug <hvn_lbll>, #> #   hbp_trt_allopdrug <hvn_lbll>, hyp_trt_allopdrug <hvn_lbll>, #> #   lab_hba1c <dbl>, lab_fasting_bg <dbl>, lab_fasting_insulin <dbl>, #> #   lab_tchol <dbl>, lab_ldlchol <dbl>, lab_hdlchol <dbl>, lab_triglyc <dbl>, …"},{"path":"https://shah-in-boots.github.io/card/readme.html","id":"cosinor-analysis","dir":"","previous_headings":"Usage","what":"Cosinor Analysis","title":"card","text":"modeling algorithm requires base R, allows internal flexibility modeling heuristics improved efficiency. user, also allows standard modeling tools/approaches, flexible user interface accounts individual/population analysis single/multiple component analysis. cosinor models available R, however allow simple multiple-component individual/population analysis method tidy (tidyverse tidymodels approaches).","code":"m <- cosinor(rDYX ~ hour, twins, tau = c(24, 12)) summary(m) #> Individual Cosinor Model  #> ------------------------------------------ #> Call:  #> cosinor(formula = rDYX ~ M + A1 * cos(2*pi*hour/24 + phi1) + A2 * cos(2*pi*hour/12 + phi2)  #>  #> Period(s): 24, 12  #>  #> Residuals:  #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #> -3.00770 -0.52024 -0.03247  0.00000  0.48753  4.88552  #>  #> Coefficients:  #>         Estimate  Std. Error #> mesor  2.8586510 0.006062639 #> amp1   0.2964114 0.008702368 #> amp2   0.1302012 0.008542526 #> phi1  -2.6542757 0.028911445 #> phi2  -3.6636921 0.065235427 ggcosinor(m) #> This is a harmonic multiple-component cosinor object. The orthophase, bathyphase, and global amplitude were calculated. #> Warning in regularize.values(x, y, ties, missing(ties)): collapsing to unique #> 'x' values #> `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")' head(augment(m)) #> # A tibble: 6 × 8 #>       y     t     x1        x2        z1        z2 .fitted .resid #>   <dbl> <dbl>  <dbl>     <dbl>     <dbl>     <dbl>   <dbl>  <dbl> #> 1  2.63     8 -0.5   -5.00e- 1  8.66e- 1 -8.66e- 1    3.22 -0.592 #> 2  2.42     9 -0.707 -1.84e-16  7.07e- 1 -1   e+ 0    3.21 -0.787 #> 3  1.81    10 -0.866  5   e- 1  5   e- 1 -8.66e- 1    3.15 -1.34  #> 4  2.01    11 -0.966  8.66e- 1  2.59e- 1 -5.00e- 1    3.08 -1.07  #> 5  1.63    12 -1      1   e+ 0  1.22e-16 -2.45e-16    3.01 -1.38  #> 6  1.95    13 -0.966  8.66e- 1 -2.59e- 1  5   e- 1    2.95 -0.996"},{"path":"https://shah-in-boots.github.io/card/reference/augment.cosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment data with information from a cosinor object — augment.cosinor","title":"Augment data with information from a cosinor object — augment.cosinor","text":"Augment accepts cosinor model object adds information observation dataset. includes predicted values .fitted column residuals .resid column. New columns always begin . prefix avoid overwriting columns original dataset.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/augment.cosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment data with information from a cosinor object — augment.cosinor","text":"","code":"# S3 method for class 'cosinor' augment(x, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/augment.cosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment data with information from a cosinor object — augment.cosinor","text":"x cosinor object created cosinor() ... extensibility","code":""},{"path":"https://shah-in-boots.github.io/card/reference/augment.cosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment data with information from a cosinor object — augment.cosinor","text":"tibble object","code":""},{"path":[]},{"path":"https://shah-in-boots.github.io/card/reference/card-package.html","id":null,"dir":"Reference","previous_headings":"","what":"card: Cardiovascular Applications in Research Data — card-package","title":"card: Cardiovascular Applications in Research Data — card-package","text":"collection cardiovascular research datasets analytical tools, including methods cardiovascular procedural data, electrocardiography, echocardiography, catheterization data. Additional methods exist analysis procedural billing codes.","code":""},{"path":[]},{"path":"https://shah-in-boots.github.io/card/reference/card-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"card: Cardiovascular Applications in Research Data — card-package","text":"Maintainer: Anish S. Shah shah..boots@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a cosinor — cosinor","title":"Fit a cosinor — cosinor","text":"cosinor() fits regression model time variable continuous outcome use trigonometric features. approaches uses linearization parameters assess statistics distribution.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a cosinor — cosinor","text":"","code":"cosinor(t, ...)  # Default S3 method cosinor(t, ...)  # S3 method for class 'data.frame' cosinor(t, y, tau, population = NULL, ...)  # S3 method for class 'matrix' cosinor(t, y, tau, population = NULL, ...)  # S3 method for class 'formula' cosinor(formula, data, tau, population = NULL, ...)  # S3 method for class 'recipe' cosinor(t, data, tau, population = NULL, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a cosinor — cosinor","text":"t Represents ordered time indices provide positions cosine wave. Depending context: data frame time-based predictor/index. matrix time-based predictor/index. recipe specifying set preprocessing steps created recipes::recipe(). ... currently used, required extensibility. y t data frame matrix, y outcome specified : data frame 1 numeric column. matrix 1 numeric column. numeric vector. tau vector determines periodicity time index. number elements vector determine number components (e.g. single versus multiple cosinor). vector single element = single-component cosinor, e.g. period = c(24) vector multiple elements = multiple-component cosinor, e.g. period = c(24, 12) population Represents population analyzed population-mean cosinor. Defaults NULL, assuming individual cosinors generated. recipe formula used, population specified : character name column contained data contains identifiers subject. Every row subject name duplicated time index given. data frame matrix used, population specified : vector length t, values representing subject correct indices. formula formula specifying outcome terms left-hand side, predictor terms right-hand side. data recipe formula used, data specified : data frame containing predictors outcome.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a cosinor — cosinor","text":"cosinor object.","code":""},{"path":[]},{"path":"https://shah-in-boots.github.io/card/reference/cosinor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a cosinor — cosinor","text":"","code":"# Data setup data(\"twins\")  # Formula interface model <- cosinor(rDYX ~ hour, twins, tau = 24)"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Area of Ellipse — cosinor_area","title":"Area of Ellipse — cosinor_area","text":"Formulas creating area ellipse identify confidence intervals, direction, graphing purposes.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area of Ellipse — cosinor_area","text":"","code":"cosinor_area(object, level = 0.95, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area of Ellipse — cosinor_area","text":"object Model class cosinor level Confidence level requested ... currently used, required extensibility.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area of Ellipse — cosinor_area","text":"Area potential cosinor graphical analysis matrix stored list.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Component Cosinor Features — cosinor_features","title":"Multiple Component Cosinor Features — cosinor_features","text":"Extract special/global features multiple component cosinor. multiple component model, specific parameters within model , must extracted model fit. extracted, can used improve plot multiple component cosinor. However, possible cosinor harmonic (see details). single-component models, orthophase acrophase global amplitude Global Amplitude (Ag) = overall amplitude defined half difference peak trough values Orthophase (Po) = lag peak time Bathyphase (Pb) =  lag trough time","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Component Cosinor Features — cosinor_features","text":"","code":"cosinor_features(object, population = TRUE, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Component Cosinor Features — cosinor_features","text":"object Model class cosinor multiple periods population object population cosinor, features calculated individual cosinors population-cosinors. Default TRUE. effect \"Individual\" cosinor objects. TRUE, calculate features entire population. FALSE, calculate features every individual cosinor population. ... extensibility","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Component Cosinor Features — cosinor_features","text":"returning cosinor features single model, return object class list. returning cosinor features every individual population cosinor, return object class tibble.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiple Component Cosinor Features — cosinor_features","text":"calculations can occur periods cosinor harmonic - , longest period integer multiple smallest period (known fundamental frequency). Otherwise, statistics accurate interpretable.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple Component Cosinor Features — cosinor_features","text":"","code":"data(twins) model <- cosinor(rDYX ~ hour, twins, c(24, 8), \"patid\") #> 23 subjects were removed due to having insufficient observations. results <- cosinor_features(model, population = FALSE) #> This is a harmonic multiple-component cosinor object. The orthophase, bathyphase, and global amplitude were calculated. head(results) #> # A tibble: 6 × 7 #>   population harmonic  peak trough ampGlobal orthophase bathyphase #>        <dbl> <lgl>    <dbl>  <dbl>     <dbl>      <dbl>      <dbl> #> 1          1 TRUE      3.35   1.81     0.768      23          12   #> 2          2 TRUE      3.05   2.25     0.398       3.71       15.9 #> 3          7 TRUE      2.96   2.30     0.330      10.4        23.0 #> 4          8 TRUE      4.23   2.41     0.909      13           1   #> 5          9 TRUE      2.64   2.19     0.222       9          21   #> 6         10 TRUE      3.85   2.50     0.671      14           2"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_goodness_of_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Goodness of Fit of Cosinor — cosinor_goodness_of_fit","title":"Goodness of Fit of Cosinor — cosinor_goodness_of_fit","text":"Goodness fit cosinor data multiple collections different timepoints multiple cycles. RSS partitioned pure error (SSPE) lack fit (SSLOF). F-test compares SSPE SSLOF detect appropriateness model. $$SSLOF = RSS - SSPE$$ $$SSPE = \\sum_{} \\sum_{l} ( Y_{il} - \\overline{Y}_{} )^2$$ fitted values time point : $$\\overline{Y}_{} = \\frac{ \\sum_{l} Y_{il} }{ n_{}}$$","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_goodness_of_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goodness of Fit of Cosinor — cosinor_goodness_of_fit","text":"","code":"cosinor_goodness_of_fit(object, level = 0.95, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_goodness_of_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goodness of Fit of Cosinor — cosinor_goodness_of_fit","text":"object requires cosinor model generated cosinor calculate statistics. level confidence level desired ... additional parameters may needed extensibility","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_goodness_of_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goodness of Fit of Cosinor — cosinor_goodness_of_fit","text":"f-statistic result goodness fit","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"General Interface for Cosinor Regression Models — cosinor_reg","title":"General Interface for Cosinor Regression Models — cosinor_reg","text":"cosinor_reg() parsnip friendly method specification cosinor regression model fitting.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Interface for Cosinor Regression Models — cosinor_reg","text":"","code":"cosinor_reg(mode = \"regression\", period = NULL)  # S3 method for class 'cosinor_reg' update(object, period = NULL, fresh = FALSE, ...)  # S3 method for class 'cosinor_reg' print(x, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Interface for Cosinor Regression Models — cosinor_reg","text":"mode character string describes type model. case, supports type \"regression\". period non-negative number vector numbers represent expected periodicity data analyzed. object Cosinor model specification fresh logical whether arguments modified place replaced altogether ... Extensible x Cosinor model specification","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Interface for Cosinor Regression Models — cosinor_reg","text":"","code":"library(parsnip) cosinor_reg(period = c(24, 8)) |>   parsnip::set_engine(\"card\") |>   parsnip::set_mode(\"regression\") #> Cosinor Model Specification (regression) #>  #> Main Arguments: #>   period = c(24, 8) #>  #> Computational engine: card  #>"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_zero_amplitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero Amplitude Test — cosinor_zero_amplitude","title":"Zero Amplitude Test — cosinor_zero_amplitude","text":"Zero amplitude test assesses well circadian pattern fits data, essentially detecting present rhythm data.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_zero_amplitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero Amplitude Test — cosinor_zero_amplitude","text":"","code":"cosinor_zero_amplitude(object, level = 0.95)"},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_zero_amplitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero Amplitude Test — cosinor_zero_amplitude","text":"object model class cosinor level confidence level","code":""},{"path":"https://shah-in-boots.github.io/card/reference/cosinor_zero_amplitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero Amplitude Test — cosinor_zero_amplitude","text":"Returns list test statistics, well prints report analysis.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/geh.html","id":null,"dir":"Reference","previous_headings":"","what":"GEH parameters in a large clinical cohort — geh","title":"GEH parameters in a large clinical cohort — geh","text":"Used model-building examples repeat testing.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/geh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GEH parameters in a large clinical cohort — geh","text":"","code":"geh"},{"path":"https://shah-in-boots.github.io/card/reference/geh.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GEH parameters in a large clinical cohort — geh","text":"tibble","code":""},{"path":"https://shah-in-boots.github.io/card/reference/ggcosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot of cosinor model — ggcosinor","title":"ggplot of cosinor model — ggcosinor","text":"ggplot cosinor model can visualize variety cosinor model subtypes, including single-component, multiple-component, individual, population cosinor models, built using cosinor. single component cosinor, following values plotted: M = midline estimating statistic rhythm = amplitude P = phi acrophase (shift 0 peak) using multiple-component cosinor, terms different. periods frequencies resonate harmonic, following calculated. periods harmonic, values just descriptors curve. M = midline estimating statistic rhythm Ag = global amplitude, distance peak trough (value amplitude single component) Po = orthophase (equivalent acrophase single component), lag time peak value Pb = bathyphase, lag time trough value","code":""},{"path":"https://shah-in-boots.github.io/card/reference/ggcosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot of cosinor model — ggcosinor","text":"","code":"ggcosinor(object, labels = TRUE, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/ggcosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot of cosinor model — ggcosinor","text":"object Model class cosinor. instead single cosinor model, multiple objects plotted, can provide list cosinor models. Plotting multiple models simultaneously preferred outcome variable similar scale. labels Logical value annotations placed plot, default = TRUE. labels depend type plot. labels attempted placed \"smartly\" using ggrepel::geom_label_repel() function. ... extensibility. function use different implementations based type model (single multiple component). Attributes object passed , calculated fly.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/ggcosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot of cosinor model — ggcosinor","text":"Object class ggplot can layered","code":""},{"path":[]},{"path":"https://shah-in-boots.github.io/card/reference/ggcosinor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot of cosinor model — ggcosinor","text":"","code":"data(triplets) m1 <- cosinor(rDYX ~ hour, twins, tau = 24) m2 <- cosinor(rDYX ~ hour, twins, tau = c(24, 12)) ggcosinor(m1, labels = FALSE) #> Warning: collapsing to unique 'x' values #> `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'  ggcosinor(m2) #> This is a harmonic multiple-component cosinor object. The orthophase, bathyphase, and global amplitude were calculated. #> Warning: collapsing to unique 'x' values #> `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'  ggcosinor(list(single = m1, multiple = m2)) #> Warning: collapsing to unique 'x' values #> This is a harmonic multiple-component cosinor object. The orthophase, bathyphase, and global amplitude were calculated. #> Warning: collapsing to unique 'x' values #> `geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'"},{"path":"https://shah-in-boots.github.io/card/reference/ggellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical Assessment of Amplitude and Acrophase — ggellipse","title":"Graphical Assessment of Amplitude and Acrophase — ggellipse","text":"ggplot-styled graphical representation ellipse region generated cosinor analysis. requires data used cosinor model fit model cosinor. includes amplitude, acrophase,","code":""},{"path":"https://shah-in-boots.github.io/card/reference/ggellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical Assessment of Amplitude and Acrophase — ggellipse","text":"","code":"ggellipse(object, level = 0.95, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/ggellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical Assessment of Amplitude and Acrophase — ggellipse","text":"object Requires cosinor model extract correct statistics generate plot. level Confidence level ellipse ... Additional parameters may needed extensibility","code":""},{"path":"https://shah-in-boots.github.io/card/reference/ggellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical Assessment of Amplitude and Acrophase — ggellipse","text":"Object class ggplot help identify confidence intervals","code":""},{"path":"https://shah-in-boots.github.io/card/reference/ggellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical Assessment of Amplitude and Acrophase — ggellipse","text":"","code":"data(\"twins\") m <- cosinor(rDYX ~ hour, twins, tau = 24) ggellipse(m)"},{"path":"https://shah-in-boots.github.io/card/reference/hrv.html","id":null,"dir":"Reference","previous_headings":"","what":"Output from MATLAB HRV Toolbox — hrv","title":"Output from MATLAB HRV Toolbox — hrv","text":"Data single patient data output HRV Toolbox. contains granular data calculated HRV 5-second sliding windows.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/hrv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output from MATLAB HRV Toolbox — hrv","text":"","code":"hrv"},{"path":"https://shah-in-boots.github.io/card/reference/hrv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Output from MATLAB HRV Toolbox — hrv","text":"tibble data frame","code":""},{"path":"https://shah-in-boots.github.io/card/reference/predict.cosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a cosinor — predict.cosinor","title":"Predict from a cosinor — predict.cosinor","text":"Predict cosinor","code":""},{"path":"https://shah-in-boots.github.io/card/reference/predict.cosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a cosinor — predict.cosinor","text":"","code":"# S3 method for class 'cosinor' predict(object, new_data, type = \"numeric\", ...)"},{"path":"https://shah-in-boots.github.io/card/reference/predict.cosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a cosinor — predict.cosinor","text":"object cosinor object. new_data data frame matrix new predictors. type single character. type predictions generate. Valid options : \"numeric\" numeric predictions. ... Additional arguments passed prediction function","code":""},{"path":"https://shah-in-boots.github.io/card/reference/predict.cosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a cosinor — predict.cosinor","text":"tibble predictions. number rows tibble guaranteed number rows new_data.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/procedure_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Center for Medicare and Medicaid Services (CMS) Procedure Codes — procedure_codes","title":"Center for Medicare and Medicaid Services (CMS) Procedure Codes — procedure_codes","text":"generative function used call CMS procedure codes. used create dataset can generally used map procedure codes descriptions, allowing understanding interventions performed. currently supported codes explained details. following procedure codes currently supported: ICD9 procedure codes, recently updated 2014-10-01 ICD10 procedure codes, recently updated 2023-01-11 HCPCS prcoedure codes, recently updated 2023-11-29 CPT procedure codes, recently updated 2023-11-29","code":""},{"path":"https://shah-in-boots.github.io/card/reference/procedure_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center for Medicare and Medicaid Services (CMS) Procedure Codes — procedure_codes","text":"","code":"procedure_codes(format, version)"},{"path":"https://shah-in-boots.github.io/card/reference/procedure_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center for Medicare and Medicaid Services (CMS) Procedure Codes — procedure_codes","text":"format format procedure codes, written character. Currently supported formats : c(\"icd9\", \"icd10\", \"hcpcs\", \"cpt\") (case-insensitive). version version procedure codes, generally written year. Currently supported: c(\"2014\", \"2023\")","code":""},{"path":"https://shah-in-boots.github.io/card/reference/procedure_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center for Medicare and Medicaid Services (CMS) Procedure Codes — procedure_codes","text":"tbl_df two columns: code description. code refers procedure code, description refers description procedure.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/procedure_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Center for Medicare and Medicaid Services (CMS) Procedure Codes — procedure_codes","text":"CMS usually release updated version codes annual basis. dataset supported can identified year published (go-live date, publically-available date). previous versions included package . ICD9: 2014 ICD10: 2023 HCPCS: 2023 CPT: 2023","code":""},{"path":"https://shah-in-boots.github.io/card/reference/procedure_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center for Medicare and Medicaid Services (CMS) Procedure Codes — procedure_codes","text":"","code":"# Procedure codes from the 2014 version of ICD-9 icd9 <- procedure_codes(format = \"icd9\", version = 2014)"},{"path":"https://shah-in-boots.github.io/card/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, tidy","code":""},{"path":"https://shah-in-boots.github.io/card/reference/stress.html","id":null,"dir":"Reference","previous_headings":"","what":"Recurrent event sample data — stress","title":"Recurrent event sample data — stress","text":"Data outcomes study cardiovascular outcomes. contains first visit date, last known date, times various events happened. document death right censoring well. events non-ordered.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/stress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recurrent event sample data — stress","text":"","code":"stress"},{"path":"https://shah-in-boots.github.io/card/reference/stress.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Recurrent event sample data — stress","text":"tibble data frame","code":""},{"path":"https://shah-in-boots.github.io/card/reference/tidy.cosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a(n) cosinor object — tidy.cosinor","title":"Tidy a(n) cosinor object — tidy.cosinor","text":"Tidy summarizes information components cosinor model.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/tidy.cosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a(n) cosinor object — tidy.cosinor","text":"","code":"# S3 method for class 'cosinor' tidy(x, conf.int = FALSE, conf.level = 0.95, ...)"},{"path":"https://shah-in-boots.github.io/card/reference/tidy.cosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a(n) cosinor object — tidy.cosinor","text":"x cosinor object created cosinor() conf.int Logical indicating whether include confidence interval tidied output conf.level confidence level use conf.int = TRUE. Must 0 1, default 0.95 (95% confidence interval). ... extensibility","code":""},{"path":"https://shah-in-boots.github.io/card/reference/tidy.cosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a(n) cosinor object — tidy.cosinor","text":"tibble object","code":""},{"path":"https://shah-in-boots.github.io/card/reference/tidy.cosinor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy a(n) cosinor object — tidy.cosinor","text":"cosinor objects necessarily T-statistic standard error based mean value, form joint-confidence interval. standard error generated using Taylor series expansion object subspecies harmonic regressions.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/triplets.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly time series data with clinical covariates — triplets","title":"Hourly time series data with clinical covariates — triplets","text":"Clinical data also available visualization comparison. HRV measures used comparison testing functions.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/triplets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly time series data with clinical covariates — triplets","text":"","code":"triplets"},{"path":"https://shah-in-boots.github.io/card/reference/triplets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hourly time series data with clinical covariates — triplets","text":"tbl_df","code":""},{"path":"https://shah-in-boots.github.io/card/reference/twins.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly time series data with clinical covariates — twins","title":"Hourly time series data with clinical covariates — twins","text":"Data algorithm generates summary HRV measure using Poincare phase-space plot, generated kurtoses x y axis. Clinical data also available visualization comparison. repeat rows hour Dyx taken.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/twins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly time series data with clinical covariates — twins","text":"","code":"twins"},{"path":"https://shah-in-boots.github.io/card/reference/twins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hourly time series data with clinical covariates — twins","text":"tibble data frame","code":""},{"path":"https://shah-in-boots.github.io/card/reference/zipcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Zipcodes with Associated Latitude and Longitude — zipcode","title":"Zipcodes with Associated Latitude and Longitude — zipcode","text":"dataset archived/orphaned zipcode package.","code":""},{"path":"https://shah-in-boots.github.io/card/reference/zipcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zipcodes with Associated Latitude and Longitude — zipcode","text":"","code":"zipcode"},{"path":"https://shah-in-boots.github.io/card/reference/zipcode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Zipcodes with Associated Latitude and Longitude — zipcode","text":"data frame character vector zipcodes latitude/longitude","code":""},{"path":"https://shah-in-boots.github.io/card/news/index.html","id":"card-v011","dir":"Changelog","previous_headings":"","what":"card v0.1.1","title":"card v0.1.1","text":"CRAN release: 2024-11-06","code":""},{"path":"https://shah-in-boots.github.io/card/news/index.html","id":"updates-0-1-1","dir":"Changelog","previous_headings":"","what":"Updates","title":"card v0.1.1","text":"cosinor() now stable population mean cosinor option appropriate confidence intervals procedure_codes() latest ICD10 codes, 11/2023, included package","code":""},{"path":"https://shah-in-boots.github.io/card/news/index.html","id":"next-steps-0-1-1","dir":"Changelog","previous_headings":"","what":"Next steps","title":"card v0.1.1","text":"Adding additional data analysis tools cardiology data (including catheterization echocardiogram data)","code":""},{"path":"https://shah-in-boots.github.io/card/news/index.html","id":"deprecations-0-1-1","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"card v0.1.1","text":"circadian-rhythm features deprecated recurrent data features removed cosinor() functions updated customizable efficient, however moving separate package v0.2.0","code":""},{"path":"https://shah-in-boots.github.io/card/news/index.html","id":"card-v010","dir":"Changelog","previous_headings":"","what":"card v0.1.0","title":"card v0.1.0","text":"CRAN release: 2020-09-03","code":""},{"path":"https://shah-in-boots.github.io/card/news/index.html","id":"bugs-0-1-0","dir":"Changelog","previous_headings":"","what":"Bugs","title":"card v0.1.0","text":"cosinor() unable run certain models based y values","code":""},{"path":"https://shah-in-boots.github.io/card/news/index.html","id":"features-0-1-0","dir":"Changelog","previous_headings":"","what":"Features","title":"card v0.1.0","text":"cosinor_features() allows assessing global/special attributes multiple component cosinor analysis ggcosinor() now functional single multiple component analysis Sequential model building can performed build_sequential_models(), however list format likely updated “tidy” future Confidence interval methods now work population-mean cosinor, including summary function ggpopcosinor() can show cosinors individuals across population, along mean predicted cosinor ggcosinor() accepts single models print.cosinor() plot.cosinor() functions added cosinor_zero_amplitude() test added, works individual cosinor. Population-mean cosinor analysis added. cosinor() now takes argument individuals. individual cosinor methods generally work, may yet accurate. Circadian rhythm analysis also created initial family functions work simplify process analyzing 24-hour data. circ_compare_groups() helps summarize circadian data covariate time. visualized using ggcircadian(). Also includes ggforest() create forest plots odds ratios. dependent circ_odds() function generate odds ratios time. important regression function, built hardhat package tidymodels, cosinor() introduced new function allow diagnostic analysis circadian patterns. Although algorithm well known, implementation R allows potential diagnostics. includes ggcosinorfit() allows assessing rhythmicity confidence intervals amplitude acrophase cosinor model. Basic methods assessing model, print, summary, coef, confint currently function. Recurrent events can now analyzed using powerful function called recur_survival_table(), allows redesigning longitudinal data tables model appropriate analysis. built extend survival analyses. recur_summary_table() function allows reviewing findings recurrent events category help understand event strata. circ_sun() function allows identifying sunrise sunset times based geographical location. intended couple circ_center() function center time series around event, sunrise. vignette added review data.","code":""}]
